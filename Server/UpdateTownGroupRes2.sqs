; args: [unit, infantry, tanks, interval]
; unit : group leader at start
; infantry : number of initial infantry units defending town
; tanks : number of initial tanks defending town
; interval : reinforce interval in minutes

? !(local LocalServerObject) : exit
_unit = _this select 0
_unit disableAI "TARGET"; _unit disableAI "AUTOTARGET"; _unit disableAI "MOVE"
~5

_si = siRes
_group = group _unit

_inf = _this select 1
_tanks = _this select 2
_tanks = 2
_interval = 40*(_this select 3)
; _interval = 1*60
_patrol = 0

_distSpawn = viewDistance + 5000

_res = [getPos _unit, [siRes], []] call funcGetClosestTown;
_flag = (_res select 0) select tdFlag
_posFlag = getPos _flag
_ti = _res select 2

;deleteVehicle _unit
_unit setpos [1,1,1]; _unit setdamage 1

? isNull _group : format["ERROR: _group is NULL at init for RES town group in '%1'", (towns select _ti) select tdName] call fDebugLog; exit

_list = groupMatrix select _si
_list set [count _list, _group]
_gi = [_group, _list] call funcGetIndex

@( !(isNull (mhq select si0)) && !(isNull (mhq select si1)) )
~10

#CheckSpawn
  _spawn = false
  { _g = _x; { if ((_x distance _flag) < _distSpawn) then { _spawn = true } } foreach (units _g) } foreach (groupMatrix select si0)
  { _g = _x; { if ((_x distance _flag) < _distSpawn) then { _spawn = true } } foreach (units _g) } foreach (groupMatrix select si1)
  ? _spawn : goto "Spawn"
  ~10
  goto "CheckSpawn"
      
#Spawn
_infExtra = time/_interval; _infExtra = _infExtra - (_infExtra % 1)
; _infExtra = 2
_inf = _inf + _infExtra
while "_inf > 8" do { _inf = _inf - 1; _tanks = _tanks + 1 }
while "_tanks > 2" do { _tanks = _tanks - 1; _patrol = _patrol + 1 }
? isNull _group : format["ERROR: _group is NULL at spawn for RES town group in '%1'", (towns select _ti) select tdName] call fDebugLog

? _inf == 0 : goto "SpawnNoInf"
_i = 0
#SpawnAddInf
  _type = -1
  while "_type == -1" do { _type = (infTown select _si) call funcGetRandomUnitType }
  _pos = [_posFlag, 25, 50] call funcGetRandomPos
  [_type, 0, 0, 0, _pos, random 360, _si, -1, _group, 0, 0] exec "Common\AddUnit.sqs"
  ~1
  _i = _i + 1
  ? _i < _inf : goto "SpawnAddInf"
#SpawnNoInf

? _tanks == 0 : goto "SpawnNoTanks"
_i = 0
#SpawnAddTank
  _type = -1
  while "_type == -1" do { _type = (airTown select _si) call funcGetRandomUnitType }
  _pos = [_posFlag, 25, 50] call funcGetRandomPos
  [_type, 1, 1, 0, _pos, random 360, _si, -1, _group, 0, 0] exec "Common\AddUnit.sqs"
  ~1
  _i = _i + 1
  ? _i < _tanks : goto "SpawnAddTank"
#SpawnNoTanks

? _patrol == 0 : goto "SpawnNoPatrol"
_i = 0
#SpawnAddPatrol
  ; find smallest patrol group
  _groupPatrol = grpNull
  _unitsMin = 12
  { _unitCount = count units _x; if (_unitCount < _unitsMin) then { _groupPatrol = _x; _unitsMin = _unitCount } } forEach groupsPatrol
  ? (isNull _groupPatrol) || _unitsMin > 10 : goto "SpawnNoPatrol"
  _list = groupMatrix select _si
  _giPatrol = [_groupPatrol, _list] call funcGetIndex
  _type = -1
  while "_type == -1" do { _type = (airTown select _si) call funcGetRandomUnitType }
  _pos = [_posFlag, 25, 50] call funcGetRandomPos
  [_type, 1, 1, 0, _pos, random 360, _si, -1, _groupPatrol, 0, 0] exec "Common\AddUnit.sqs"
  ~1
  _i = _i + 1
  ? _i < _patrol : goto "SpawnAddPatrol"
#SpawnNoPatrol

_timePatrol = 0
_timeReinforce = time + _interval - 30 + (random 60)

#Update
  ~(25 + random 10)
	? time > _timeReinforce && ((towns select _ti) select tdSide) == siRes : goto "Reinforce"
	? (count (units _group)) == 0 : goto "Update"
	? ((towns Select _ti) select tdSide) != siRes : goto "TakeFlag"
	? time > _timePatrol : goto "Patrol"
	{ if ( alive _x && unitReady _x ) then { doStop _x } } foreach units _group
	{ if (alive _x) then { _x doWatch ([getPos _x, 200, 200] call funcGetRandomPos) } } foreach units _group
	goto "Update"

#Patrol
  _group setCombatMode "YELLOW"; _group setBehaviour "STEALTH"; _group setSpeedMode "NORMAL"
  ; TODO { _x disableAI "TARGET" } foreach (units _group)

   ; player globalchat format["Patrol: %1", (towns select _ti) select tdName]
	_timePatrol = time + 3*60
	{ if ((random 1) < 0.5 && _x == driver vehicle _x) then { _x doMove ([getPos _flag, 50, 150] call funcGetRandomPos) } } foreach units _group
	goto "Update"

#TakeFlag
	{ if ((random 1) < 0.5 && _x == driver vehicle _x) then { _x doMove ([getPos _flag, 4, 4] call funcGetRandomPos) } } foreach units _group
	goto "Update"

#Reinforce
  _timeReinforce = time + _interval - 30 + (random 60)
	? count (units _group) < 8 : goto "AddInf"
	? count (units _group) <= 9 : goto "AddTank"
	goto "SendOutTanks"

#AddInf
  _type = -1
  while "_type == -1" do { _type = (infTown select _si) call funcGetRandomUnitType }
  _pos = [_posFlag, 25, 50] call funcGetRandomPos
  [_type, 0, 0, 0, _pos, random 360, _si, -1, _group, 0, 0] exec "Common\AddUnit.sqs"
   ; player globalchat format["AddInf: %1", (towns select _ti) select tdName]
  goto "Patrol"
  
#AddTank
  _type = -1
  while "_type == -1" do { _type = (airTown select _si) call funcGetRandomUnitType }
  _pos = [_posFlag, 25, 50] call funcGetRandomPos
  [_type, 1, 1, 0, _pos, random 360, _si, -1, _group, 0, 0] exec "Common\AddUnit.sqs"
  ; player globalchat format["AddTank: %1", (towns select _ti) select tdName]
  goto "Patrol"

#SendOutTanks
  _tanksInGroup = []
  { _v = vehicle _x; if (_x != _v && !(_v in _tanksInGroup) ) then { _tanksInGroup set [count _tanksInGroup, _v] } } forEach units _group
  ; player globalchat format["SendOutTanks: %1", (towns select _ti) select tdName]
  _i = 0
  #NextTank
    _tank = _tanksInGroup select _i
    _groupPatrol = grpNull
    _unitsMin = 12
    { _unitCount = count units _x; if (_unitCount < _unitsMin) then { _groupPatrol = _x; _unitsMin = _unitCount } } forEach groupsPatrol
    ? _unitsMin <= 10 && !(isNull _groupPatrol) : (crew _tank) join _groupPatrol
    _i = _i + 1
    ? _i < (count _tanksInGroup) : goto "NextTank"
  goto "Patrol"
