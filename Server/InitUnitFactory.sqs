; args: [_type, _si, _objects]

? !(local LocalServerObject) : exit

_typeStructure = _this select 0
_si = _this select 1
_factory = (_this select 2) select 0

_queues = factoryQueues select _si

_qi = count _queues

_queues set [_qi, [_factory, _typeStructure, []] ]

#Wait
	[_factory, _si, 0] exec "Server\SendQueueLength.sqs"
	
  buildingsInUse = buildingsInUse - [_factory, objNull]
	; pvBuildingNotInUse = _factory; PublicVariable "pvBuildingNotInUse"

	_queue = (_queues select _qi) select 2
	
	@((count _queue) > 0 || isNull _factory)

	? (isNull _factory): goto "BuildingDeleted"
	? !(alive _factory): goto "BuildingDestroyed"

	? (count _queue) > 0 : goto "BuildUnits"

	goto "Wait"

#BuildUnits
  buildingsInUse set [count buildingsInUse, _factory]
	; pvBuildingInUse = _factory; PublicVariable "pvBuildingInUse"

#BuildNextUnit

	_entry = _queue select 0
	_type = _entry select 0
	_driver = _entry select 1
	_gunner = _entry select 2
	_commander = _entry select 3
	_giJoin = _entry select 4
	_giBuyer = _entry select 5
	_qid = _entry select 6

	_queue set [0, 0]
	_queue = _queue - [0]
	(_queues select _qi) set [2, _queue]
	; _queue = (_queues select _qi) select 2

  [_factory, _si, (count _queue) + 1] exec "Server\SendQueueLength.sqs"

  ? _type >= maxUnitTypes : _unitDesc = unitDefs select (utCustom select _si)
	? _type < maxUnitTypes : _unitDesc = unitDefs select _type

	_isVehicle = false
	_mannedUnitTypes = _unitDesc select udCrew
	? ((count _mannedUnitTypes) > 0): _isVehicle = true

	_cost = _unitDesc select udCost
	_buildTime = _unitDesc select udBuildTime
  
	_crew = 0
	? !(_isVehicle): goto "SkipVehicleStats"
	_crewType = _mannedUnitTypes select 1
	? (_driver == 1): _crew = _crew + 1; _cost = _cost + ((unitDefs select _crewType) select udCost); _buildTime = _buildTime + ((unitDefs select _crewType) select udBuildTime)
	? (_gunner == 1): _crew = _crew + 1; _cost = _cost + ((unitDefs select _crewType) select udCost); _buildTime = _buildTime + ((unitDefs select _crewType) select udBuildTime)
	? (_commander == 1): _crew = _crew + 1; _cost = _cost + ((unitDefs select _crewType) select udCost); _buildTime = _buildTime + ((unitDefs select _crewType) select udBuildTime)
	#SkipVehicleStats

	_unitsToBuild = 0
	? !(_isVehicle): _unitsToBuild = 1
	? (_isVehicle): _unitsToBuild = _crew

	_grpJoin = (groupMatrix select _si) select _giJoin

	;_grpSize = (count units _grpJoin) + ((groupUnitsBuildingMatrix select _si) select _giJoin)
	_grpSize = (count units _grpJoin)
	? ((_grpSize + _unitsToBuild) > maxGroupSize): goto "GroupFull"
	
	_money = (groupMoneyMatrix select _si) select _giBuyer
	? (_money < _cost): goto "NoMoney"

	? _qid in (qidCancel select _si) : goto "UnitCanceled"

	[_si, _giBuyer, _cost] call funcMoneySpend
	
	[_type, _si, _giBuyer, _giJoin] exec "Server\Info\UnitBuilding.sqs"

	; ~([_buildTime, 5] select dev)

	_timeBuilt = time + ([_buildTime, 5] select dev)
  @ (time > _timeBuilt) || _qid in (qidCancel select _si)

	? _qid in (qidCancel select _si) : [_si, _giBuyer, _cost, 0] call funcMoneyAdd; goto "UnitCanceled"

	[_qid, _si, 0] exec "Server\SendQueueRem.sqs"
	
	_unitsBuilding = ((groupUnitsBuildingMatrix select _si) select _giJoin) - _unitsToBuild
	(groupUnitsBuildingMatrix select _si) set [_giJoin, _unitsBuilding]

	? !(alive _factory): goto "BuildingDestroyed"

	? !( ((groupMatrix select _si) select _giJoin) in (groupAiMatrix select _si) ) : [_type, _driver, _gunner, _commander, _si, _giJoin, _giBuyer, _factory, 0] exec "Server\SendAddUnit.sqs"; goto "RemoteAdd"
	  _res = [_factory, _typeStructure, _si] call funcCalcUnitPlacementPosDir
	  _posUnit = _res select 0
	  _dirUnit = _res select 1
	  [_type, _driver, _gunner, _commander, _posUnit, _dirUnit, _si, _giJoin, grpNull, _giBuyer, 1] exec "Common\AddUnit.sqs"
    ((groupMatrix select _si) select _giJoin) reveal _factory
  #RemoteAdd	
	
	#CheckNext
	
	? (count _queue) > 0 : goto "BuildNextUnit"

	goto "Wait"

#GroupFull
	[_type, _si, _giBuyer, _giJoin] exec "Server\Info\GroupFull.sqs"
	[_qid, _si, 0] exec "Server\SendQueueRem.sqs"
	goto "UnitNotBuilt"

#NoMoney
	[_type, _si, _giBuyer, _giJoin] exec "Server\Info\NoMoneyUnit.sqs"
	[_qid, _si, 0] exec "Server\SendQueueRem.sqs"
	goto "UnitNotBuilt"

#UnitCanceled
	goto "UnitNotBuilt"

#UnitNotBuilt
	_unitsBuilding = ((groupUnitsBuildingMatrix select _si) select _giJoin) - _unitsToBuild
	(groupUnitsBuildingMatrix select _si) set [_giJoin, _unitsBuilding]
	[_qid, _si] exec "Server\RemoveCancelQID.sqs"
	
	? (count _queue > 0): goto "BuildNextUnit"
	goto "Wait"

#BuildingDestroyed
	? (count _queue) == 0 : goto "Wait"

	_entry = _queue select 0
	_type = _entry select 0
	_driver = _entry select 1
	_gunner = _entry select 2
	_commander = _entry select 3
	_giJoin = _entry select 4
	_giBuyer = _entry select 5
	_qid = _entry select 6

  ? _type >= maxUnitTypes : _unitDesc = unitDefs select (utCustom select _si)
	? _type < maxUnitTypes : _unitDesc = unitDefs select _type

	_cost = _unitDesc select udCost

	_queue set [0, 0]
	_queue = _queue - [0]
	(_queues select _qi) set [2, _queue]
	; _queue = (_queues select _qi) select 2

	_bVehicle = false
	? (count ((unitDefs select _type) select udCrew) > 0): _bVehicle = true

	? !(_bVehicle): _unitsToBuild = 1
	? (_bVehicle): _unitsToBuild = _driver; _unitsToBuild = _unitsToBuild + _gunner; _unitsToBuild = _unitsToBuild + _commander

	_unitsBuilding = ((groupUnitsBuildingMatrix select _si) select _giJoin) - _unitsToBuild
	(groupUnitsBuildingMatrix select _si) set [_giJoin, _unitsBuilding]

  qidCancel set [ _si, (qidCancel select _si) - [_qid] ]
	[_qid, _si, 0] exec "Server\SendQueueRem.sqs"

	goto "BuildingDestroyed"

#BuildingDeleted
	(_queues select _qi) set [2, []]
	Exit