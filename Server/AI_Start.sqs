; args: [unit, si, gi]

? !(local LocalServerObject) : exit

_unit = _this select 0
_si = _this select 1
_gi = _this select 2

; wait for unit/vehicle data
~5

? !(alive _unit) : exit

; TODO _unit disableAI "TARGET"
_unit allowFleeing 0
_unit setCombatMode "YELLOW"; _unit setBehaviour "AWARE"; _unit setSpeedMode "FULL"

_vehicle = vehicle _unit

; SUPPORT
? _unit == _vehicle : goto "SkipSupport"
_typeVehicle = _vehicle call funcGetUnitTypeFromObject
? _typeVehicle == -1 : format["ERROR: vehicle type not found in AI_Start.sqs for '%1'", _vehicle] call fDebugLog; goto "SkipSupport"
? _typeVehicle in (typesSupport select _si) && _unit == driver _vehicle : [_unit, _si, _gi] exec "Server\AI_PlaceSupportVehicle.sqs"; exit
#SkipSupport

; RALLY
? (((aiSetting select _si) select _gi) select aisRallyPoint) == 0 || _unit != driver _vehicle : goto "NoRally"
[_unit, _si, _gi] exec "Server\AI_MoveToRallyPoint.sqs"
#WaitRallyReached
~5
? !(alive _unit) : exit
? call busyCheck : goto "WaitRallyReached"
#NoRally

; BOARD
? _unit != _vehicle || (((aiSetting select _si) select _gi) select aisPickupWait) == 0 : goto "NoBoard"
_timeCheckBoardStart = time
_posCheckBoardStart = getPos _unit
#Board
[_unit, _si, _gi] exec "Server\AI_CheckBoardTransport.sqs"
#WaitBoardReady
  ~5
  ? !(alive _unit) : exit
  ? call busyCheck : goto "WaitBoardReady"
? ([getPos _unit, _posCheckBoardStart] call funcDistH) < 200 && time < (_timeCheckBoardStart + 120*(((aiSetting select _si) select _gi) select aisPickupWait)) : goto "Board"
#NoBoard

#Exit
_order = (orderMatrix select _si) select _gi
_script = (orderDefs select (_order select 1)) select 2
[_unit, _si, _gi, _order select 2] exec format["Server\%1", _script]
exit
