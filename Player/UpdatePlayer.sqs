; args: [unit, si, gi]

;player globalchat "UpdatePlayer.sqs entered"

_unit = _this select 0

_isCommander = false
_mhqAlive = false
_timeDead = 0

#Init
  [_unit, siPlayer, 200] exec "Common\EventAdd_InfantryKilled.sqs"
	[_unit] exec "Player\AddPlayerActions.sqs"
	_unit addEventHandler ["Fired",{ [_this select 0, nearestObject[_this select 0, _this select 4] ] exec "Player\LimitWeaponRange.sqs" }]

  @( !(isNull (mhq select si0)) && !(isNull (mhq select si1)) )

#Update
	~1

  _mhq = mhq select siPlayer

	;? (pvDebugVars): pvDebugVars=false; player globalchat format["pvDebugVar1=%1", pvDebugVar1]; player globalchat format["pvDebugVar2=%1", pvDebugVar2]; player globalchat format["pvDebugVar3=%1", pvDebugVar3]

	? pvGameOver != -1 : [] exec "Player\PlayGameOverSequence.sqs"; Exit

	? time > (timeLastPing + blockTime) && !bBlockedByClient : bBlockedByClient = true; [] exec "Player\BlockByClient.sqs"
	
	? !(alive _unit): goto "WaitUntilAlive"
	
	
	? ((groupPlayer == (groupCommander select siPlayer)) && !_isCommander): _isCommander = true; goto "CommanderInit"
	? ((groupPlayer != (groupCommander select siPlayer)) && _isCommander): _isCommander = false; goto "CommanderInit"
	? (_mhqAlive && !(alive _mhq)) || (!_mhqAlive && (alive _mhq)): _mhqAlive = alive _mhq; [_mhq] exec "Player\SetMHQActions.sqs"

	goto "Update"

#CommanderInit
	[_mhq] exec "Player\SetMHQActions.sqs"
	_mhqAlive = alive _mhq
	goto "Update"

#WaitUntilAlive
	_timeDead = _timeDead + 5
	_timeRespawn = time + 30
	
	forceMap true

	closeDialog 0
	~1
	[_timeRespawn] exec "Player\Dialog Respawn.sqs"
	
	_index = 0
	#RemoveAction
		_unit removeAction _index
		_index = _index + 1
		? (_index < 10):goto "RemoveAction"

	@(alive player) || (pvGameOver != -1)

	? pvGameOver != -1 : [] exec "Player\PlayGameOverSequence.sqs"; exit

	_unit = player
	removeAllWeapons _unit
  [_unit, siPlayer, 200] exec "Common\EventAdd_InfantryKilled.sqs"

	_money = (groupMoneyMatrix select siPlayer) select giPlayer

	? _money >= costRespawn : goto "Respawn"
	#WaitMoney
	_unit setPos [-2000 + _si*100, -2000 + _gi*100, 1000]
	; _unit setPos [(posCenter select 0) + _si*100, (posCenter select 1) + _gi*100, 1000]
	_unit setVelocity [0,0,0]
	~1
	_money = (groupMoneyMatrix select siPlayer) select giPlayer
	? _money < costRespawn : goto "WaitMoney"
	
	#Respawn
	? costRespawn > 0 : [costRespawn] exec "Player\SendMoneySpent.sqs"
	? !(alive objectRespawn) : objectRespawn = [objectRespawn, siPlayer] call funcGetNearestRespawnObject

	_ts = objectRespawn call funcGetStructTypeFromObject
	? _ts != -1 : goto "RespawnStruct"
	
	#RespawnMHQ
	_mhq = mhq select siPlayer
	_dir = getDir _mhq
	_pos = getPos _mhq
	_posRespawn = [(_pos select 0)-(sin _dir)*10,(_pos select 1)-(cos _dir)*10,0]
  goto "RespawnPosSet"
  
	#RespawnStruct
	_res = [objectRespawn, _ts, siPlayer] call funcCalcUnitPlacementPosDir
	_posRespawn = _res select 0
	
	#RespawnPosSet
	_unit setVelocity [0,0,0]
	_unit setPos _posRespawn

	forceMap false

	[_unit, siPlayer] exec "Player\EquipPlayerRespawn.sqs"

	[_unit] exec "Player\AddPlayerActions.sqs"

	_unit addEventHandler ["Fired",{ [_this select 0, nearestObject[_this select 0, _this select 4] ] exec "Player\LimitWeaponRange.sqs" }]

	goto "Update"

